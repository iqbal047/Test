package main;

import dao.DatabaseConnector;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Enjamul
 */
public class AllPayments extends javax.swing.JPanel {

    String vId, vDescription, vIncome, vExpense, gap = "";
    String tTid, tTname, tTmonth, tTamount, tTdate, tPid;

    DefaultTableModel model, trTable, stuTable;

    public AllPayments() {
        initComponents();
        DataController.loadTeachersId(tId);
        DataController.loadStudentsId(sIds);

        model = new DefaultTableModel();
        sTable.setModel(model);
        model.addColumn("ID");
        model.addColumn("Description");
        model.addColumn("Income");
        model.addColumn("Expense");

        trTable = new DefaultTableModel();
        teacherTable.setModel(trTable);
        trTable.addColumn("ID");
        trTable.addColumn("Name");
        trTable.addColumn("Month");
        trTable.addColumn("Amount");
        trTable.addColumn("Date");

        stuTable = new DefaultTableModel();
        studentTable.setModel(stuTable);
        stuTable.addColumn("ID");
        stuTable.addColumn("Name");
        stuTable.addColumn("Month");
        stuTable.addColumn("Amount");
        stuTable.addColumn("Date");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        tId = new javax.swing.JComboBox();
        jButton6 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        sIds = new javax.swing.JComboBox();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        sMonth = new javax.swing.JComboBox();
        jButton10 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        tMonth = new javax.swing.JComboBox();
        jButton14 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        tDatef = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        tDatet = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        lName = new javax.swing.JLabel();
        tIncome = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tExpense = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tBalance = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        teacherTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        teacherExpense = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        totalPayStudent = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(153, 51, 255));

        jButton1.setBackground(new java.awt.Color(204, 204, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("View Fund");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Teacher ID:");

        jButton2.setBackground(new java.awt.Color(204, 204, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("See Payments By ID");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tId.setEditable(true);
        tId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton6.setBackground(new java.awt.Color(204, 204, 255));
        jButton6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton6.setText("All Teacher Payments");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tId, 0, 149, Short.MAX_VALUE))
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Student ID:");

        jButton3.setBackground(new java.awt.Color(204, 204, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("See Payments By ID");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        sIds.setEditable(true);
        sIds.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sIds.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton5.setBackground(new java.awt.Color(204, 204, 255));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton5.setText("All Student Payments");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sIds, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(sIds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton8.setBackground(new java.awt.Color(255, 153, 153));
        jButton8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton8.setText("Clear All");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Months:");

        sMonth.setEditable(true);
        sMonth.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Months", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        jButton10.setBackground(new java.awt.Color(204, 204, 255));
        jButton10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton10.setText("Payment Giver Students");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sMonth, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(sMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Months:");

        tMonth.setEditable(true);
        tMonth.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Months", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));

        jButton14.setBackground(new java.awt.Color(204, 204, 255));
        jButton14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton14.setText("Payment Received Teachers");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton12.setBackground(new java.awt.Color(204, 204, 255));
        jButton12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton12.setText("Payment Due Teachers");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tMonth, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(tMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("From:");

        tDatef.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton7.setBackground(new java.awt.Color(204, 204, 255));
        jButton7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton7.setText("All Income");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("To:");

        tDatet.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton4.setBackground(new java.awt.Color(204, 204, 255));
        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.setText("All Expense");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tDatef))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(tDatet)))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tDatef, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(tDatet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(153, 51, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("School Fund Information");

        lName.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        lName.setText("Total Income:");

        tIncome.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("Total Expense:");

        tExpense.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel9.setText("Balance:");

        tBalance.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        sTable.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        sTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Description", "Income", "Expense"
            }
        ));
        jScrollPane1.setViewportView(sTable);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 914, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tIncome)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tExpense)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tBalance)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lName)
                    .addComponent(tIncome)
                    .addComponent(jLabel6)
                    .addComponent(tExpense)
                    .addComponent(jLabel9)
                    .addComponent(tBalance))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText(" Payments made to Teachers");

        teacherTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Month", "Amount", "Date"
            }
        ));
        jScrollPane2.setViewportView(teacherTable);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setText("Total Payment:");

        teacherExpense.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(teacherExpense))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(323, 323, 323)
                        .addComponent(jLabel13)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(teacherExpense)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("Payments from Students");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel17.setText("Total received:");

        totalPayStudent.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Month", "Amount", "Date"
            }
        ));
        jScrollPane3.setViewportView(studentTable);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalPayStudent))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(336, 336, 336)
                        .addComponent(jLabel16)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(totalPayStudent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(334, 334, 334)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (sTable.getRowCount() > 0) {
            for (int i = sTable.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
        if (teacherTable.getRowCount() > 0) {
            for (int i = teacherTable.getRowCount() - 1; i > -1; i--) {
                trTable.removeRow(i);
            }
        }
        if (studentTable.getRowCount() > 0) {
            for (int i = studentTable.getRowCount() - 1; i > -1; i--) {
                stuTable.removeRow(i);
            }
        }

        Connection con = null;
        CallableStatement cstmt = null;
        ResultSet rst = null;
        try {
            con = DatabaseConnector.getConnection();
            cstmt = con.prepareCall("{CALL showAllTransaction()}");
            cstmt.execute();

            rst = cstmt.getResultSet();
            while (rst.next()) {
                vId = rst.getString(1);
                vDescription = rst.getString(2);
                vIncome = rst.getString(3);
                vExpense = rst.getString(4);

                model.addRow(new Object[]{vId, vDescription, vIncome, vExpense});
            }
            cstmt = con.prepareCall("{CALL totalIncome()}");
            cstmt.execute();

            rst = cstmt.getResultSet();
            while (rst.next()) {
                tIncome.setText(rst.getString(1));
            }
            cstmt = con.prepareCall("{CALL totalExpense()}");
            cstmt.execute();

            rst = cstmt.getResultSet();
            while (rst.next()) {
                tExpense.setText(rst.getString(1));
            }
            cstmt = con.prepareCall("{CALL fundBalance()}");
            cstmt.execute();

            rst = cstmt.getResultSet();
            while (rst.next()) {
                tBalance.setText(rst.getString(1));
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                con.close();
                cstmt.close();
                rst.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        totalPayStudent.setText("");
        teacherExpense.setText("");
        teacherExpense.setText("");


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (sTable.getRowCount() > 0) {
            for (int i = sTable.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
        if (teacherTable.getRowCount() > 0) {
            for (int i = teacherTable.getRowCount() - 1; i > -1; i--) {
                trTable.removeRow(i);
            }
        }
        if (studentTable.getRowCount() > 0) {
            for (int i = studentTable.getRowCount() - 1; i > -1; i--) {
                stuTable.removeRow(i);
            }
        }
        if (sIds.getSelectedIndex() > 0) {
            Connection con = null;
            CallableStatement cstmt = null;
            ResultSet rst = null;
            try {
                con = DatabaseConnector.getConnection();
                cstmt = con.prepareCall("{CALL getAllPaymentStudent(?)}");
                cstmt.setString(1, sIds.getSelectedItem().toString());
                cstmt.execute();

                rst = cstmt.getResultSet();
                while (rst.next()) {
                    tTid = rst.getString(2);
                    tTname = rst.getString(3);
                    tTmonth = rst.getString(4);
                    tTamount = rst.getString(5);
                    tTdate = rst.getString(6);

                    stuTable.addRow(new Object[]{tTid, tTname, tTmonth, tTamount, tTdate});
                }
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    con.close();
                    cstmt.close();
                    rst.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            totalPayStudent.setText("");
            teacherExpense.setText("");
            teacherExpense.setText("");
            tIncome.setText("");
            tExpense.setText("");
            tBalance.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Please select an ID");
        }
    }//GEN-LAST:event_jButton3ActionPerformed
    private int getTSum() {
        int sum = 0;
        for (int i = 0; i < trTable.getRowCount(); i++) {
            {
                sum = sum + Integer.parseInt(trTable.getValueAt(i, 3).toString());
            }
        }
        return sum;
    }
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (sTable.getRowCount() > 0) {
            for (int i = sTable.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
        if (teacherTable.getRowCount() > 0) {
            for (int i = teacherTable.getRowCount() - 1; i > -1; i--) {
                trTable.removeRow(i);
            }
        }
        if (studentTable.getRowCount() > 0) {
            for (int i = studentTable.getRowCount() - 1; i > -1; i--) {
                stuTable.removeRow(i);
            }
        }
        sIds.setSelectedIndex(0);
        tId.setSelectedIndex(0);
        totalPayStudent.setText("");
        teacherExpense.setText("");
        teacherExpense.setText("");
        tIncome.setText("");
        tExpense.setText("");
        tBalance.setText("");
        sMonth.setSelectedIndex(0);
        tMonth.setSelectedIndex(0);
        tDatef.setText("");
        tDatet.setText("");
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (sTable.getRowCount() > 0) {
            for (int i = sTable.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
        if (teacherTable.getRowCount() > 0) {
            for (int i = teacherTable.getRowCount() - 1; i > -1; i--) {
                trTable.removeRow(i);
            }
        }
        if (studentTable.getRowCount() > 0) {
            for (int i = studentTable.getRowCount() - 1; i > -1; i--) {
                stuTable.removeRow(i);
            }
        }
        if (tId.getSelectedIndex() > 0) {
            Connection con = null;
            CallableStatement cstmt = null;
            ResultSet rst = null;
            try {
                con = DatabaseConnector.getConnection();
                cstmt = con.prepareCall("{CALL getAllPaymentTeacher(?)}");
                cstmt.setString(1, tId.getSelectedItem().toString());
                cstmt.execute();

                rst = cstmt.getResultSet();
                while (rst.next()) {
                    tTid = rst.getString(2);
                    tTname = rst.getString(3);
                    tTmonth = rst.getString(4);
                    tTamount = rst.getString(5);
                    tTdate = rst.getString(6);

                    trTable.addRow(new Object[]{tTid, tTname, tTmonth, tTamount, tTdate});
                }
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    con.close();
                    cstmt.close();
                    rst.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            totalPayStudent.setText("");
            teacherExpense.setText(String.valueOf(teacherTable.getRowCount()));
            teacherExpense.setText("");
            tIncome.setText("");
            tExpense.setText("");
            tBalance.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Please select an ID");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        if (sTable.getRowCount() > 0) {
            for (int i = sTable.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
        if (teacherTable.getRowCount() > 0) {
            for (int i = teacherTable.getRowCount() - 1; i > -1; i--) {
                trTable.removeRow(i);
            }
        }
        if (studentTable.getRowCount() > 0) {
            for (int i = studentTable.getRowCount() - 1; i > -1; i--) {
                stuTable.removeRow(i);
            }
        }
        if (sMonth.getSelectedIndex() > 0) {
            Connection con = null;
            CallableStatement cstmt = null;
            ResultSet rst = null;
            try {
                con = DatabaseConnector.getConnection();
                cstmt = con.prepareCall("{CALL getStudentPaymentByMonth(?)}");
                cstmt.setString(1, sMonth.getSelectedItem().toString());
                cstmt.execute();

                rst = cstmt.getResultSet();
                while (rst.next()) {
                    tTid = rst.getString(1);
                    tTname = rst.getString(2);
                    tTmonth = rst.getString(3);
                    tTamount = rst.getString(4);
                    tTdate = rst.getString(5);

                    stuTable.addRow(new Object[]{tTid, tTname, tTmonth, tTamount, tTdate});
                }
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    con.close();
                    cstmt.close();
                    rst.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            totalPayStudent.setText("");

            teacherExpense.setText("");
            teacherExpense.setText("");
            tIncome.setText("");
            tExpense.setText("");
            tBalance.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a month!");
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        if (sTable.getRowCount() > 0) {
            for (int i = sTable.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
        if (teacherTable.getRowCount() > 0) {
            for (int i = teacherTable.getRowCount() - 1; i > -1; i--) {
                trTable.removeRow(i);
            }
        }
        if (studentTable.getRowCount() > 0) {
            for (int i = studentTable.getRowCount() - 1; i > -1; i--) {
                stuTable.removeRow(i);
            }
        }
        if (tMonth.getSelectedIndex() > 0) {
            Connection con = null;
            CallableStatement cstmt = null;
            ResultSet rst = null;
            try {
                con = DatabaseConnector.getConnection();
                cstmt = con.prepareCall("{CALL getTrPayDueByMonth(?)}");
                cstmt.setString(1, tMonth.getSelectedItem().toString());
                cstmt.execute();

                rst = cstmt.getResultSet();
                while (rst.next()) {
                    tTid = rst.getString(1);
                    tTname = rst.getString(2);
                    tTmonth = "";
                    tTamount = "";
                    tTdate = "";

                    trTable.addRow(new Object[]{tTid, tTname, tTmonth, tTamount, tTdate});
                }
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    con.close();
                    cstmt.close();
                    rst.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            totalPayStudent.setText("");

            teacherExpense.setText(String.valueOf(teacherTable.getRowCount()));
            teacherExpense.setText("");
            tIncome.setText("");
            tExpense.setText("");
            tBalance.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a month!");
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        if (sTable.getRowCount() > 0) {
            for (int i = sTable.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
        if (teacherTable.getRowCount() > 0) {
            for (int i = teacherTable.getRowCount() - 1; i > -1; i--) {
                trTable.removeRow(i);
            }
        }
        if (studentTable.getRowCount() > 0) {
            for (int i = studentTable.getRowCount() - 1; i > -1; i--) {
                stuTable.removeRow(i);
            }
        }
        if (tMonth.getSelectedIndex() > 0) {
            Connection con = null;
            CallableStatement cstmt = null;
            ResultSet rst = null;
            try {
                con = DatabaseConnector.getConnection();
                cstmt = con.prepareCall("{CALL getTeacherPayByMonth(?)}");
                cstmt.setString(1, tMonth.getSelectedItem().toString());
                cstmt.execute();

                rst = cstmt.getResultSet();
                while (rst.next()) {
                    tTid = rst.getString(2);
                    tTname = rst.getString(3);
                    tTmonth = rst.getString(4);
                    tTamount = rst.getString(5);
                    tTdate = rst.getString(6);

                    trTable.addRow(new Object[]{tTid, tTname, tTmonth, tTamount, tTdate});
                }
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    con.close();
                    cstmt.close();
                    rst.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            teacherExpense.setText(String.valueOf(teacherTable.getRowCount()));
            totalPayStudent.setText("");

            teacherExpense.setText("");
            tIncome.setText("");
            tExpense.setText("");
            tBalance.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Please select a month!");
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (sTable.getRowCount() > 0) {
            for (int i = sTable.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
        if (teacherTable.getRowCount() > 0) {
            for (int i = teacherTable.getRowCount() - 1; i > -1; i--) {
                trTable.removeRow(i);
            }
        }
        if (studentTable.getRowCount() > 0) {
            for (int i = studentTable.getRowCount() - 1; i > -1; i--) {
                stuTable.removeRow(i);
            }
        }

        if (!tDatef.getText().isEmpty() && !tDatet.getText().isEmpty()) {
            Connection con = null;
            CallableStatement cstmt = null;
            ResultSet rst = null;

            try {
                con = DatabaseConnector.getConnection();
                cstmt = con.prepareCall("{CALL getExpenseByDate(?,?)}");
                cstmt.setString(1, tDatef.getText());
                cstmt.setString(2, tDatet.getText());
                cstmt.execute();

                rst = cstmt.getResultSet();
                while (rst.next()) {
                    tTid = rst.getString(2);
                    tTname = rst.getString(3);
                    tTmonth = rst.getString(4);
                    tTamount = rst.getString(5);
                    tTdate = rst.getString(6);

                    trTable.addRow(new Object[]{tTid, tTname, tTmonth, tTamount, tTdate});
                }
                con = DatabaseConnector.getConnection();
                cstmt = con.prepareCall("{CALL getOExpenseByDate(?,?)}");
                cstmt.setString(1, tDatef.getText());
                cstmt.setString(2, tDatet.getText());
                cstmt.execute();

                rst = cstmt.getResultSet();
                while (rst.next()) {
                    tTid = rst.getString(1);
                    tTname = rst.getString(2);
                    tTamount = rst.getString(3);
                    tTdate = rst.getString(4);

                    trTable.addRow(new Object[]{tTid, tTname, gap, tTamount, tTdate});
                }
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    con.close();
                    cstmt.close();
                    rst.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            totalPayStudent.setText("");

            teacherExpense.setText("");
            tIncome.setText("");
            teacherExpense.setText(Integer.toString(getTSum()));
            tExpense.setText("");
            tBalance.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Please enter Date");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if (sTable.getRowCount() > 0) {
            for (int i = sTable.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
        if (teacherTable.getRowCount() > 0) {
            for (int i = teacherTable.getRowCount() - 1; i > -1; i--) {
                trTable.removeRow(i);
            }
        }
        if (studentTable.getRowCount() > 0) {
            for (int i = studentTable.getRowCount() - 1; i > -1; i--) {
                stuTable.removeRow(i);
            }
        }

        if (!tDatef.getText().isEmpty() && !tDatet.getText().isEmpty()) {
            Connection con = null;
            CallableStatement cstmt = null;
            ResultSet rst = null;

            try {
                con = DatabaseConnector.getConnection();
                cstmt = con.prepareCall("{CALL getIncomeByDate(?, ?)}");
                cstmt.setString(1, tDatef.getText());
                cstmt.setString(2, tDatet.getText());
                cstmt.execute();

                rst = cstmt.getResultSet();
                while (rst.next()) {
                    tTid = rst.getString(2);
                    tTname = rst.getString(3);
                    tTmonth = rst.getString(4);
                    tTamount = rst.getString(5);
                    tTdate = rst.getString(6);

                    stuTable.addRow(new Object[]{tTid, tTname, tTmonth, tTamount, tTdate});
                }
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    con.close();
                    cstmt.close();
                    rst.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            totalPayStudent.setText(Integer.toString(getSum()));

            teacherExpense.setText(String.valueOf(teacherTable.getRowCount()));
            tIncome.setText("");
            tExpense.setText("");
            tBalance.setText("");
        } else {
            JOptionPane.showMessageDialog(null, "Please enter Date");
        }

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (sTable.getRowCount() > 0) {
            for (int i = sTable.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
        if (teacherTable.getRowCount() > 0) {
            for (int i = teacherTable.getRowCount() - 1; i > -1; i--) {
                trTable.removeRow(i);
            }
        }
        if (studentTable.getRowCount() > 0) {
            for (int i = studentTable.getRowCount() - 1; i > -1; i--) {
                stuTable.removeRow(i);
            }
        }

        Connection con = null;
        CallableStatement cstmt = null;
        ResultSet rst = null;
        try {
            con = DatabaseConnector.getConnection();
            cstmt = con.prepareCall("{CALL getAllTeacherPayment()}");
            cstmt.execute();

            rst = cstmt.getResultSet();
            while (rst.next()) {
                tTid = rst.getString(2);
                tTname = rst.getString(3);
                tTmonth = rst.getString(4);
                tTamount = rst.getString(5);
                tTdate = rst.getString(6);

                trTable.addRow(new Object[]{tTid, tTname, tTmonth, tTamount, tTdate});
            }
            cstmt = con.prepareCall("{CALL totalPayTeacher()}");
            cstmt.execute();

            rst = cstmt.getResultSet();
            while (rst.next()) {
                teacherExpense.setText(rst.getString(1));
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                con.close();
                cstmt.close();
                rst.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        totalPayStudent.setText("");

        teacherExpense.setText(String.valueOf(teacherTable.getRowCount()));
        tIncome.setText("");
        tExpense.setText("");
        tBalance.setText("");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (sTable.getRowCount() > 0) {
            for (int i = sTable.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
        if (teacherTable.getRowCount() > 0) {
            for (int i = teacherTable.getRowCount() - 1; i > -1; i--) {
                trTable.removeRow(i);
            }
        }
        if (studentTable.getRowCount() > 0) {
            for (int i = studentTable.getRowCount() - 1; i > -1; i--) {
                stuTable.removeRow(i);
            }
        }

        Connection con = null;
        CallableStatement cstmt = null;
        ResultSet rst = null;
        try {
            con = DatabaseConnector.getConnection();
            cstmt = con.prepareCall("{CALL getAllStudentPayment()}");
            cstmt.execute();

            rst = cstmt.getResultSet();
            while (rst.next()) {
                tTid = rst.getString(2);
                tTname = rst.getString(3);
                tTmonth = rst.getString(4);
                tTamount = rst.getString(5);
                tTdate = rst.getString(6);

                stuTable.addRow(new Object[]{tTid, tTname, tTmonth, tTamount, tTdate});
            }
            cstmt = con.prepareCall("{CALL totalPayStudent()}");
            cstmt.execute();

            rst = cstmt.getResultSet();
            while (rst.next()) {
                totalPayStudent.setText(rst.getString(1));
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                con.close();
                cstmt.close();
                rst.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

        teacherExpense.setText("");
        teacherExpense.setText("");
        tIncome.setText("");
        tExpense.setText("");
        tBalance.setText("");
    }//GEN-LAST:event_jButton5ActionPerformed
    private int getSum() {
        int sum = 0;
        for (int i = 0; i < stuTable.getRowCount(); i++) {
            {
                sum = sum + Integer.parseInt(stuTable.getValueAt(i, 3).toString());
            }
        }
        return sum;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lName;
    private javax.swing.JComboBox sIds;
    private javax.swing.JComboBox sMonth;
    private javax.swing.JTable sTable;
    private javax.swing.JTable studentTable;
    private javax.swing.JLabel tBalance;
    private javax.swing.JTextField tDatef;
    private javax.swing.JTextField tDatet;
    private javax.swing.JLabel tExpense;
    private javax.swing.JComboBox tId;
    private javax.swing.JLabel tIncome;
    private javax.swing.JComboBox tMonth;
    private javax.swing.JLabel teacherExpense;
    private javax.swing.JTable teacherTable;
    private javax.swing.JLabel totalPayStudent;
    // End of variables declaration//GEN-END:variables
}
