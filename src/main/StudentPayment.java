/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import dao.DatabaseConnector;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Enjamul
 */
public class StudentPayment extends javax.swing.JPanel {

    String vPid, vId, vName, vAmount, vMonth, vDate;
    DefaultTableModel model;

    public StudentPayment() {
        initComponents();
        DataController.loadStudentsId(tId);
        DataController.loadStudentsPaymentId(tPid);

        model = new DefaultTableModel();
        payTable.setModel(model);
        model.addColumn("Payment ID");
        model.addColumn("Student ID");
        model.addColumn("Student Name");
        model.addColumn("Amount");
        model.addColumn("Month");
        model.addColumn("Date");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderGrp = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tDate = new javax.swing.JTextField();
        tAmount = new javax.swing.JTextField();
        tMonth = new javax.swing.JTextField();
        tName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tId = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cName = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tPid = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        saveStudent = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        payTable = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 51, 255)));

        jLabel1.setText("Name:");

        jLabel3.setText("Month of Pay:");

        jLabel6.setText("Amount:");

        jLabel8.setText("Payment Date:");

        tAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tAmountActionPerformed(evt);
            }
        });

        tMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tMonthActionPerformed(evt);
            }
        });

        jLabel9.setText("Student ID:");

        tId.setEditable(true);
        tId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Write ID" }));
        tId.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tIdItemStateChanged(evt);
            }
        });

        jLabel2.setText("Course:");

        cName.setText("Course Name");

        jLabel4.setText("Payment ID:");

        tPid.setEditable(true);
        tPid.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Write ID" }));
        tPid.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tPidItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel9)
                            .addComponent(jLabel2))
                        .addGap(60, 60, 60)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tName)
                            .addComponent(cName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tId, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(tPid, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(46, 46, 46)
                        .addComponent(tMonth))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tAmount)
                            .addComponent(tDate))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(tPid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cName))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(180, 180, 180))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 51, 255)));

        saveStudent.setBackground(new java.awt.Color(153, 51, 255));
        saveStudent.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        saveStudent.setForeground(new java.awt.Color(255, 255, 255));
        saveStudent.setText("Save Payment");
        saveStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveStudentActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(153, 51, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Clear");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(153, 51, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("All Payments");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(153, 51, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Update Paymnet");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(153, 51, 255));
        jButton4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Delete Payment");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(153, 51, 255));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Show in Table");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(saveStudent)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveStudent)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setForeground(new java.awt.Color(255, 255, 255));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Record Payment Info");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        payTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(payTable);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tMonthActionPerformed

    private void tAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tAmountActionPerformed

    private void saveStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveStudentActionPerformed
         if (payTable.getRowCount() > 0) {
            for (int i = payTable.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
         }
        getPaymentValue();
        if (tId.getSelectedIndex() > 0 && !vName.isEmpty() && !vMonth.isEmpty() && !vAmount.isEmpty() && !vDate.isEmpty()) {
            DataController.saveStudentPayment(vId, vName, vMonth, vAmount, vDate);
            JOptionPane.showMessageDialog(null, "Payment Saved Successfully!");
        } else {
            JOptionPane.showMessageDialog(null, "Please give all information correctly!");
        }
        DataController.loadStudentsPaymentId(tPid);
        DataController.loadStudentsId(tId);
        cName.setText("");


    }//GEN-LAST:event_saveStudentActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        clear();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (payTable.getRowCount() > 0) {
            for (int i = payTable.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }

        Connection con = null;
        Statement cstmt = null;
        ResultSet rst = null;
        try {
            con = DatabaseConnector.getConnection();
            cstmt = con.createStatement();
            rst = cstmt.executeQuery("select * from get_payment");
            while (rst.next()) {
                vId = rst.getString("s_id");
                vName = rst.getString("name");
                vAmount = rst.getString("amount");
                vDate = rst.getString("p_date");
                vPid = rst.getString("p_id");
                vMonth = rst.getString("p_month");

                model.addRow(new Object[]{vPid, vId, vName, vAmount, vMonth, vDate});
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                con.close();
                cstmt.close();
                rst.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tIdItemStateChanged
        if (tId.getSelectedIndex() > 0) {
            Connection con = null;
            CallableStatement cstmt = null;
            ResultSet rst = null;
            try {
                con = DatabaseConnector.getConnection();
                cstmt = con.prepareCall("{CALL getStudentInfo(?)}");
                cstmt.setString(1, tId.getSelectedItem().toString());
                cstmt.execute();
                rst = cstmt.getResultSet();
                while (rst.next()) {
                    tName.setText(rst.getString("name"));
                    cName.setText(rst.getString("s_group"));
                }

                cstmt = con.prepareCall("{CALL getPaymentInfo(?)}");
                cstmt.setString(1, tId.getSelectedItem().toString());
                cstmt.execute();
                rst = cstmt.getResultSet();
                if (rst.next()) {
                    tMonth.setText(rst.getString("p_month"));
                    tAmount.setText(rst.getString("amount"));
                    tDate.setText(rst.getString("p_date"));
                } else {
                    tMonth.setText("");
                    tAmount.setText("");
                    tDate.setText("");
                }
                cstmt = con.prepareCall("{CALL sumPayAmountStudent(?)}");
                cstmt.setString(1, tId.getSelectedItem().toString());
                cstmt.execute();
                rst = cstmt.getResultSet();
                if (rst.next()) {
                    tAmount.setText(rst.getString(1));
                } else {
                    tAmount.setText("");
                }
                
                cstmt = con.prepareCall("{CALL sumPayMonthStudent(?)}");
                cstmt.setString(1, tId.getSelectedItem().toString());
                cstmt.execute();
                rst = cstmt.getResultSet();
                if (rst.next()) {
                    tMonth.setText(rst.getString(1));
                } else {
                    tMonth.setText("");
                }
                
                tPid.setSelectedIndex(0);
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    con.close();
                    cstmt.close();
                    rst.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        } else {
            tName.setText("");
            tMonth.setText("");
            tAmount.setText("");
            tDate.setText("");
        }
    }//GEN-LAST:event_tIdItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         if (payTable.getRowCount() > 0) {
            for (int i = payTable.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
         }
        getPaymentValue();
        if (tPid.getSelectedIndex() > 0 && tId.getSelectedIndex() > 0 && !vName.isEmpty() && !vMonth.isEmpty() && !vAmount.isEmpty() && !vDate.isEmpty()) {
            DataController.updateStudentPayment(vPid, vId, vName, vMonth, vAmount, vDate);
            JOptionPane.showMessageDialog(null, "Payment Updated Successfully!");
        } else {
            JOptionPane.showMessageDialog(null, "Please give all information correctly!");
        }
        DataController.loadStudentsPaymentId(tPid);
        DataController.loadStudentsId(tId);
        cName.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         if (payTable.getRowCount() > 0) {
            for (int i = payTable.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
         }
        getPaymentValue();
        if (tPid.getSelectedIndex() > 0) {
            DataController.deleteStudentPayment(vPid);
            JOptionPane.showMessageDialog(null, "Payment Deleted Successfully!");
        } else {
            JOptionPane.showMessageDialog(null, "Please Select a Payment Id!");
        }
        DataController.loadStudentsPaymentId(tPid);
        DataController.loadStudentsId(tId);
        cName.setText("");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (payTable.getRowCount() > 0) {
            for (int i = payTable.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
        }
        if (tId.getSelectedIndex() > 0) {
            Connection con = null;
            CallableStatement cstmt = null;
            ResultSet rst = null;
            try {
                con = DatabaseConnector.getConnection();
                cstmt = con.prepareCall("{CALL getAllPaymentStudent(?)}");
                cstmt.setString(1, tId.getSelectedItem().toString());
                cstmt.execute();

                rst = cstmt.getResultSet();
                while (rst.next()) {
                    vPid = rst.getString(1);
                    vId = rst.getString(2);
                    vName = rst.getString(3);
                    vMonth = rst.getString(4);
                    vAmount = rst.getString(5);
                    vDate = rst.getString(6);

                    model.addRow(new Object[]{vPid, vId, vName, vAmount, vMonth, vDate});
                }
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    con.close();
                    cstmt.close();
                    rst.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select an ID");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void tPidItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tPidItemStateChanged
        if (tPid.getSelectedIndex() > 0) {
            Connection con = null;
            PreparedStatement cstmt = null;
            ResultSet rst = null;
            try {
                con = DatabaseConnector.getConnection();
                cstmt = con.prepareStatement("select * from get_payment where p_id = ?");
                cstmt.setString(1, tPid.getSelectedItem().toString());
                cstmt.executeQuery();
                rst = cstmt.getResultSet();
                while (rst.next()) {
                    tId.setSelectedItem(rst.getString("s_id"));
                }
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    con.close();
                    cstmt.close();
                    rst.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_tPidItemStateChanged

    private void getPaymentValue() {
        vPid =tPid.getSelectedItem().toString();
        vId = tId.getSelectedItem().toString();
        vName = tName.getText();
        vMonth = tMonth.getText();
        vAmount = tAmount.getText();
        vDate = tDate.getText();
    }

    private void clear() {
        cName.setText("");
        tId.setSelectedIndex(0);
        tName.setText("");
        tMonth.setText("");
        tAmount.setText("");
        tDate.setText("");
        if (payTable.getRowCount() > 0) {
            for (int i = payTable.getRowCount() - 1; i > -1; i--) {
                model.removeRow(i);
            }
         }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cName;
    private javax.swing.ButtonGroup genderGrp;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable payTable;
    private javax.swing.JButton saveStudent;
    private javax.swing.JTextField tAmount;
    private javax.swing.JTextField tDate;
    private javax.swing.JComboBox tId;
    private javax.swing.JTextField tMonth;
    private javax.swing.JTextField tName;
    private javax.swing.JComboBox tPid;
    // End of variables declaration//GEN-END:variables
}
